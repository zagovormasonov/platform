@echo off
setlocal enabledelayedexpansion

echo üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –ø—Ä–æ–µ–∫—Ç–∞ platform –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ production

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if not exist "docker-compose.prod.yml" (
    echo ‚ùå –§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω
    exit /b 1
)

if not exist ".env" (
    echo ‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo üìã –°–æ–∑–¥–∞–µ–º .env –∏–∑ env.production...
    copy env.production .env
    echo ‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏!
    echo    notepad .env
    echo.
    pause
)

REM –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
echo üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
for /f "usebackq tokens=1,2 delims==" %%a in (".env") do (
    if not "%%a"=="" if not "%%a:~0,1%"=="#" (
        set "%%a=%%b"
    )
)

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
echo üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...

if "%POSTGRES_PASSWORD%"=="" (
    echo ‚ùå POSTGRES_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è PostgreSQL
    exit /b 1
)

if "%JWT_SECRET%"=="" (
    echo ‚ùå JWT_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è JWT
    exit /b 1
)

if "%CORS_ORIGIN%"=="" (
    echo ‚ùå CORS_ORIGIN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–æ–º–µ–Ω
    exit /b 1
)

echo ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

REM –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...
docker-compose -f docker-compose.prod.yml down --remove-orphans

REM –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã...
docker system prune -f

REM –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã
echo üî® –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã...
docker-compose -f docker-compose.prod.yml build --no-cache

REM –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...
docker-compose -f docker-compose.prod.yml up -d

REM –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo ‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...
timeout /t 30 /nobreak > nul

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...
docker-compose -f docker-compose.prod.yml ps

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏...
docker-compose -f docker-compose.prod.yml logs --tail=50

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
echo üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º health check...
timeout /t 10 /nobreak > nul

curl -f http://localhost/api/health > nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Health check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
) else (
    echo ‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª
    echo üìã –õ–æ–≥–∏ backend:
    docker-compose -f docker-compose.prod.yml logs backend
    exit /b 1
)

echo.
echo üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!
echo üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: %CORS_ORIGIN%
echo üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: docker-compose -f docker-compose.prod.yml logs -f
echo.
echo üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo    –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose -f docker-compose.prod.yml ps
echo    –õ–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs -f
echo    Health check: curl http://localhost/api/health
echo    –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: scripts\backup.bat
echo.
pause
