#!/bin/bash

# ะกะบัะธะฟั ะดะปั ะดะตะฟะปะพั ะฝะฐ Timeweb Cloud
# ะัะฟะพะปัะทะพะฒะฐะฝะธะต: ./scripts/deploy.sh [environment]

set -e

ENVIRONMENT=${1:-production}
PROJECT_NAME="platform"
DOCKER_COMPOSE_FILE="docker-compose.prod.yml"

echo "๐ ะะฐัะธะฝะฐะตะผ ะดะตะฟะปะพะน ะฟัะพะตะบัะฐ $PROJECT_NAME ะฒ ะพะบััะถะตะฝะธะต $ENVIRONMENT"

# ะัะพะฒะตััะตะผ ะฝะฐะปะธัะธะต ะฝะตะพะฑัะพะดะธะผัั ัะฐะนะปะพะฒ
if [ ! -f "$DOCKER_COMPOSE_FILE" ]; then
    echo "โ ะคะฐะนะป $DOCKER_COMPOSE_FILE ะฝะต ะฝะฐะนะดะตะฝ"
    exit 1
fi

if [ ! -f "env.production" ]; then
    echo "โ ะคะฐะนะป env.production ะฝะต ะฝะฐะนะดะตะฝ"
    exit 1
fi

# ะะฐะณััะถะฐะตะผ ะฟะตัะตะผะตะฝะฝัะต ะพะบััะถะตะฝะธั
echo "๐ ะะฐะณััะถะฐะตะผ ะฟะตัะตะผะตะฝะฝัะต ะพะบััะถะตะฝะธั..."
export $(cat env.production | grep -v '^#' | xargs)

# ะัะพะฒะตััะตะผ ะพะฑัะทะฐัะตะปัะฝัะต ะฟะตัะตะผะตะฝะฝัะต
required_vars=("POSTGRES_PASSWORD" "JWT_SECRET" "CORS_ORIGIN")
for var in "${required_vars[@]}"; do
    if [ -z "${!var}" ]; then
        echo "โ ะะตัะตะผะตะฝะฝะฐั $var ะฝะต ัััะฐะฝะพะฒะปะตะฝะฐ"
        exit 1
    fi
done

# ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัััะตััะฒัััะธะต ะบะพะฝัะตะนะฝะตัั
echo "๐ ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัััะตััะฒัััะธะต ะบะพะฝัะตะนะฝะตัั..."
docker-compose -f $DOCKER_COMPOSE_FILE down --remove-orphans

# ะฃะดะฐะปัะตะผ ััะฐััะต ะพะฑัะฐะทั (ะพะฟัะธะพะฝะฐะปัะฝะพ)
echo "๐งน ะัะธัะฐะตะผ ััะฐััะต ะพะฑัะฐะทั..."
docker system prune -f

# ะกะพะฑะธัะฐะตะผ ะฝะพะฒัะต ะพะฑัะฐะทั
echo "๐จ ะกะพะฑะธัะฐะตะผ ะฝะพะฒัะต ะพะฑัะฐะทั..."
docker-compose -f $DOCKER_COMPOSE_FILE build --no-cache

# ะะฐะฟััะบะฐะตะผ ัะตัะฒะธัั
echo "โถ๏ธ ะะฐะฟััะบะฐะตะผ ัะตัะฒะธัั..."
docker-compose -f $DOCKER_COMPOSE_FILE up -d

# ะะดะตะผ ะทะฐะฟััะบะฐ ะฑะฐะทั ะดะฐะฝะฝัั
echo "โณ ะะดะตะผ ะทะฐะฟััะบะฐ ะฑะฐะทั ะดะฐะฝะฝัั..."
sleep 30

# ะัะพะฒะตััะตะผ ััะฐััั ัะตัะฒะธัะพะฒ
echo "๐ ะัะพะฒะตััะตะผ ััะฐััั ัะตัะฒะธัะพะฒ..."
docker-compose -f $DOCKER_COMPOSE_FILE ps

# ะัะพะฒะตััะตะผ ะปะพะณะธ
echo "๐ ะัะพะฒะตััะตะผ ะปะพะณะธ..."
docker-compose -f $DOCKER_COMPOSE_FILE logs --tail=50

# ะัะพะฒะตััะตะผ health check
echo "๐ฅ ะัะพะฒะตััะตะผ health check..."
sleep 10

if curl -f http://localhost/api/health > /dev/null 2>&1; then
    echo "โ Health check ะฟัะพัะตะป ััะฟะตัะฝะพ"
else
    echo "โ Health check ะฝะต ะฟัะพัะตะป"
    echo "๐ ะะพะณะธ backend:"
    docker-compose -f $DOCKER_COMPOSE_FILE logs backend
    exit 1
fi

echo "๐ ะะตะฟะปะพะน ะทะฐะฒะตััะตะฝ ััะฟะตัะฝะพ!"
echo "๐ ะัะธะปะพะถะตะฝะธะต ะดะพัััะฟะฝะพ ะฟะพ ะฐะดัะตัั: $CORS_ORIGIN"
echo "๐ ะะพะฝะธัะพัะธะฝะณ: docker-compose -f $DOCKER_COMPOSE_FILE logs -f"
