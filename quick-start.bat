@echo off
setlocal enabledelayedexpansion

echo üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–∞ Timeweb Cloud
echo ==================================================

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...
    echo.
    echo üì• –°–∫–∞—á–∞–π—Ç–µ Docker Desktop —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞:
    echo    https://www.docker.com/products/docker-desktop
    echo.
    echo –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker Desktop –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç.
    pause
    exit /b 1
)

echo ‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose
docker-compose --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...
    echo.
    echo üì• Docker Compose –æ–±—ã—á–Ω–æ –≤—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–∞–≤ Docker Desktop.
    echo    –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker Desktop –∑–∞–ø—É—â–µ–Ω.
    pause
    exit /b 1
)

echo ‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
if not exist "docker-compose.prod.yml" (
    echo ‚ùå –§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

if not exist "env.production" (
    echo ‚ùå –§–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

REM –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if not exist ".env" (
    echo üìã –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env –∏–∑ env.production...
    copy env.production .env
    echo.
    echo ‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏!
    echo.
    echo üìù –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env –≤ –±–ª–æ–∫–Ω–æ—Ç–µ –∏ –∏–∑–º–µ–Ω–∏—Ç–µ:
    echo    - POSTGRES_PASSWORD (–ø–∞—Ä–æ–ª—å –¥–ª—è PostgreSQL)
    echo    - JWT_SECRET (—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è JWT)
    echo    - CORS_ORIGIN (–≤–∞—à –¥–æ–º–µ–Ω)
    echo.
    notepad .env
    echo.
    echo –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞...
    pause > nul
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
echo üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...

for /f "usebackq tokens=1,2 delims==" %%a in (".env") do (
    if not "%%a"=="" if not "%%a:~0,1%"=="#" (
        set "%%a=%%b"
    )
)

if "%POSTGRES_PASSWORD%"=="" (
    echo ‚ùå POSTGRES_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    pause
    exit /b 1
)

if "%POSTGRES_PASSWORD%"=="your_very_secure_password_here_change_this" (
    echo ‚ùå POSTGRES_PASSWORD –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    pause
    exit /b 1
)

if "%JWT_SECRET%"=="" (
    echo ‚ùå JWT_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    pause
    exit /b 1
)

if "%JWT_SECRET%"=="your_very_secure_jwt_secret_key_here_change_this_in_production" (
    echo ‚ùå JWT_SECRET –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    echo    –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    pause
    exit /b 1
)

echo ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

REM –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...
if not exist "nginx\ssl" mkdir nginx\ssl
if not exist "nginx\logs" mkdir nginx\logs
if not exist "backend\uploads" mkdir backend\uploads
if not exist "backups" mkdir backups

REM –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
if not exist "nginx\ssl\cert.pem" (
    echo üîê –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...
    echo.
    echo ‚ö†Ô∏è  –î–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    echo.
    REM –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    echo Creating self-signed certificate...
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout nginx\ssl\key.pem -out nginx\ssl\cert.pem -subj "/C=RU/ST=Moscow/L=Moscow/O=Platform/CN=localhost" 2>nul
    if %errorlevel% neq 0 (
        echo ‚ö†Ô∏è  OpenSSL –Ω–µ –Ω–∞–π–¥–µ–Ω. SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω.
        echo    –î–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã.
    ) else (
        echo ‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω
    )
)

REM –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π...
call scripts\deploy.bat

echo.
echo üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
echo.
echo üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo    –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose -f docker-compose.prod.yml ps
echo    –õ–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs -f
echo    Health check: curl http://localhost/api/health
echo    –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: scripts\backup.bat
echo.
echo üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost
echo    (–∏–ª–∏ –ø–æ –≤–∞—à–µ–º—É –¥–æ–º–µ–Ω—É, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
echo.
echo ‚ö†Ô∏è  –î–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
echo    1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo    2. –ò–∑–º–µ–Ω–∏—Ç–µ –¥–æ–º–µ–Ω –≤ nginx\nginx.prod.conf
echo    3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª
echo    4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
echo.
pause
